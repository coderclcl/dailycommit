package programmers_힙_더맵게;

import java.util.PriorityQueue;

// https://programmers.co.kr/learn/courses/30/lessons/42626
public class Main {
	
	public static void main(String[] args) {
		
		Solution s = new Solution();
		
		int answer;
		
		int [] scoville = {1, 2, 3, 9, 10, 12};
		int K = 7;
		
		answer = s.solution(scoville, K);
		
		System.out.println(answer);
	}

}



class Solution {
    public int solution(int[] scoville, int K) {
        
    	int answer = 0;
        PriorityQueue<Integer> priorityQueue = new PriorityQueue<Integer>();
        
        // 우선순위 큐로 데이터 옮김 
        for(int i=0; i<scoville.length; i++) {
        	priorityQueue.add(scoville[i]);
        }
        
        // 제일 작은 두 개를 빼서 계산한 다음결과를 큐에 추가한다. 
        // 이 과정을 제일 작은 값이 K 이상일 때까지 반복 
        // 모든 스코빌 지수 K 이상 만들 수 없는 경우 : 가장 작은 두 개의 원소가 모두 0일 때 
        
        while(priorityQueue.peek() < K) {
        	
        	if(priorityQueue.size() == 1) {
        		return -1;
        	}
        	
        	answer++;
        	
        	int first = priorityQueue.poll();
        	int second = priorityQueue.poll();
        	int newScov = 0;
        	
        	newScov = first + second*2;
        	priorityQueue.add(newScov);
        	
        }
        
        return answer;
    }
}
