import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

// https://www.acmicpc.net/problem/2110

public class Main {
	
	public static void main(String[] args) throws IOException {
		
		int N, C, result = 0;
		
		String line;
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		line = br.readLine();
		
		StringTokenizer st = new StringTokenizer(line);
		
		N = Integer.parseInt(st.nextToken()); // 집의 개수
		C = Integer.parseInt(st.nextToken()); // 공유기 개수
		
		int arr[] = new int[N]; // 집의 좌표 담는 배열 
		
		for(int i=0; i<N; i++) {
			arr[i] = Integer.parseInt(br.readLine());
		}
		
		Arrays.sort(arr);
		
		result = solution(arr, C);
		
		bw.append(result+"");
		
		bw.flush();
		bw.close();
		br.close();
		
	}

	private static int solution(int[] arr, int c) {
		
		int result = 0;
		int min = 1, mid, max = arr[arr.length -1] - arr[0], cnt, prev;
		
		
		while(min <= max) {
			
			cnt = 1;
			prev = 0;
			mid = (min + max)/2;
			
			for(int i=0; i<arr.length; i++) {
				
				if(arr[i] - arr[prev] >= mid) {
					cnt++;
					prev = i;
				}
				
			}
			
			if(cnt >= c) {
				min = mid + 1;
				result = mid;
			}else {
				max = mid - 1;
			}
			
		}
		
		return result;
	}

}
