import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

// https://www.acmicpc.net/problem/2740
public class Main {
	
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	
	static StringTokenizer st;
	
	static int Arow, Acol, Brow, Bcol;
	static int[][] A;
	static int[][] B;
	
	public static void main(String[] args) throws IOException {
		
		int[][] answer;
		
		st = new StringTokenizer(br.readLine());
		Arow = Integer.parseInt(st.nextToken());
		Acol = Integer.parseInt(st.nextToken());
		A = new int[Arow][Acol];
		
		for(int i=0; i<Arow; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0; j<Acol; j++) {
				A[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		st = new StringTokenizer(br.readLine());
		Brow = Integer.parseInt(st.nextToken());
		Bcol = Integer.parseInt(st.nextToken());
		B = new int[Brow][Bcol];
		
		for(int i=0; i<Brow; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0; j<Bcol; j++) {
				B[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		answer = getMultipliedMatrix(A, B);
		
		for(int i=0; i<Arow; i++) {
			for(int j=0; j<Bcol; j++) {
				bw.append(answer[i][j]+" ");
			}
			bw.append("\n");
		}
		
		bw.flush();
		bw.close();
		br.close();
		
	}
	
	
	public static int[][] getMultipliedMatrix(int[][] A, int[][] B) {
		
		int[][] result = new int[Arow][Bcol];
		
		// result[i][j] = A[i][0]*B[0][j]
		
		for(int i=0; i<Arow; i++) {
			for(int j=0; j<Bcol; j++) {
				for(int k=0; k<Acol; k++) {
					result[i][j] += A[i][k]*B[k][j];
				}
			}
		}
		
		return result;
		
	}

}
