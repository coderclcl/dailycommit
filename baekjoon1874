import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Stack;
import java.util.Vector;


// https://www.acmicpc.net/problem/1874
public class Main {
	
	static int N;
	static int[] arr;
	
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	
	static Stack<Integer> stack = new Stack<Integer>();
	static Vector<String> opVector = new Vector<String>();
	
	public static void main(String[] args) throws IOException {
		
		// stack에 1부터 n까지 담기 시작한다. 
		// 만약 수열의 현재 행과 같으면 pop한다 
		// n까지 다 담았는데 만약 stack이 비어있지 않으면 실패임 
		
		String line;
		
		int k = 1;
		int j = 0;
		
		line = br.readLine();
		N = Integer.parseInt(line);

		arr = new int[N];
		
		for(int i=0; i<arr.length; i++) {
			line = br.readLine();
			arr[i] = Integer.parseInt(line);
		}
		
		while(k <= N) {
			
			stack.push(k);
			opVector.add("+");
			
			while(!stack.isEmpty() && stack.peek() == arr[j]) {
				
				stack.pop();
				opVector.add("-");
				j++;
			}
			
			k++;
			
		}
		
		if(!stack.isEmpty()) {
			System.out.println("NO");
		}else {
			for(String val : opVector) {
				System.out.println(val);
			}
		}
		
	}

}
