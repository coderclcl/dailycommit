import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.Comparator;
import java.util.StringTokenizer;
import java.util.Vector;

// https://www.acmicpc.net/problem/1946
public class Main {
	
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	
	static StringTokenizer st;
	
	static int T, N;
	
	static int[][] rankArr;
	
	static Vector<Integer> vector = new Vector<Integer>();
	
	public static void main(String[] args) throws IOException {
		
		T = Integer.parseInt(br.readLine());
		
		for(int tc=0; tc<T; tc++) {
			
			int cnt = 0;
			boolean flag = true;
			int min = Integer.MAX_VALUE;
			
			N = Integer.parseInt(br.readLine());
			
			rankArr = new int[N][2];
			
			for(int i=0; i<N; i++) {
				st = new StringTokenizer(br.readLine());
				rankArr[i][0] = Integer.parseInt(st.nextToken());
				rankArr[i][1] = Integer.parseInt(st.nextToken());
			}
			
			// 배열을 첫번째에 맞춰서 정렬시키고 
			// 내 위에 애들이랑만 비교하면 될듯 
			Arrays.sort(rankArr, new Comparator<int[]>() {
				@Override
				public int compare(int[] o1, int[] o2) {
					return o1[0]-o2[0];
				}
			});
			
			
			
			for(int i=0; i<N; i++) {
					if(rankArr[i][1] > min ) {
						flag = false;
					}
				if(flag) {
					//System.out.println("들어오나");
					
					min = rankArr[i][1];
					
					cnt++;
				}
				flag = true;
			}
			
			vector.add(cnt);
			cnt = 0;
			
			
		}
		
		for(Integer val : vector) {
			bw.append(val+"\n");
		}
		bw.flush();
		bw.close();
		br.close();
		
	}

}
