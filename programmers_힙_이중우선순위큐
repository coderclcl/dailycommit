package programmers_힙_이중우선순위큐;

import java.util.Arrays;
import java.util.Collections;
import java.util.StringTokenizer;
import java.util.Vector;

// https://programmers.co.kr/learn/courses/30/lessons/42628
public class Main {
	
	public static void main(String[] args) {
		
		Solution s = new Solution();
		
		String[] operations = {"I 1", "I 2", "I 3", "I 4", "I 5", "I 6", "I 7", "I 8", "I 9", "I 10", "D 1", "D -1", "D 1", "D -1", "I 1", "I 2", "I 3", "I 4", "I 5", "I 6", "I 7", "I 8", "I 9", "I 10", "D 1", "D -1", "D 1", "D -1"};
		//String[] operations = {"D -1", "D 1"};
		
		int[] answer = s.solution(operations);
		
		for(int i=0; i<answer.length; i++) {
			System.out.print(answer[i]+" ");
		}
		
	}

}


class Solution {
    public int[] solution(String[] operations) {
        
    	int[] answer = new int[2];
    	String op;
    	int num;
    	Integer min, max;
      StringTokenizer st;
    	Vector<Integer> queue = new Vector<Integer>();
    	
        for(int i=0; i<operations.length; i++) {
        	st = new StringTokenizer(operations[i]);
        	op = st.nextToken();
        	num = Integer.parseInt(st.nextToken());
        	
        	if(op.equals("I")) {
        		//System.out.println("삽입");
        		queue.add(num);
        	}else if(op.equals("D") && !queue.isEmpty()) {
        		if(num==1) {
        			//System.out.println("최댓값 삭제");
        			queue.remove(queue.size()-1);
        		}else {
        			//System.out.println("최솟값 삭제");
        			queue.remove(0);
        		}
        	}
        	
        	Collections.sort(queue);
        	//System.out.println(queue);
        }
        
        
        if(queue.isEmpty()) {
        	max = 0;
        	min = 0;
        }else {
        	max = queue.get(queue.size()-1);
        	min = queue.get(0);
        }
        
        answer[1] = min;
        answer[0] = max;
        
        return answer;
    }

    
}
