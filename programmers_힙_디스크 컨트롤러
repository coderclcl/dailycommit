import java.util.Arrays;
import java.util.PriorityQueue;

// https://programmers.co.kr/learn/courses/30/lessons/42627
public class Main {
	
	public static void main(String[] args) {
		
		int answer = 0;
		
		int[][] jobs = {{24,10}, {28,39}, {43,20}, {37,5}, {47,22}, {20,47}, {15,34}, {15,2}, {35,43}, {26,1}};
		
		Solution s = new Solution();
		
		answer = s.solution(jobs);
		
		System.out.println("정답 : " + answer);
		
	}
}


class Solution {
	
	int waiting = 0;
	
    public int solution(int[][] jobs) {
    	
        int answer = 0;
        
        // 들어온 시간이 가장 짧은 애부터 처리한다 
        // 만약 들어온 시간이 같다면 더 빨리 끝나는 애부터 처리한다. 
        // 현재 진행중인 작업의 끝나는 시간보다 더 빨리 들어온 애들은 
        // 진입 시간을 맞춰서 변경 
        
        jobsSort(jobs);
        
        answer = jobs[0][0];
        
        //chkArr(jobs);
        
        for(int i=0; i<jobs.length; i++) {
        	
       		// 가장 앞에 있는 애 처리시키고 
       		answer += jobs[i][1];
       		
       		// 이후 시간 겹치는 애들 다 시작시간 업데이트
       		if(i+1<jobs.length) {
       			updateStart(jobs, i, answer);
       		}
       		
       		// 소트 
       		jobsSort(jobs);
       		
       		//chkArr(jobs);
        }
        
        return (answer + waiting - jobs[0][0])/jobs.length;
    }
    
    
    private void chkArr(int[][] jobs) {
    	
    	for(int i=0; i<jobs.length; i++) {
    		for(int j=0; j<jobs[i].length; j++) {
    			System.out.print(jobs[i][j] + " ");
    		}
    		System.out.println();
    	}
    	
    }
    
    
    private void updateStart(int[][] jobs, int i, int answer) {
		
    	for(int j=i+1; j<jobs.length; j++) {
    		if(jobs[j][0] <= answer) {
    			waiting += (answer - jobs[j][0]);
    			jobs[j][0] = answer;
    		}else {
    			return;
    		}
    	}
    	
	}


    private void jobsSort(int[][] jobs) {
    	// jobs 배열 첫번째 요소로 정렬, 만약 같으면 두번째 요소로 정렬 
        Arrays.sort(jobs, (o1, o2) -> {
        	
        	if(o1[0]==o2[0]) {
        		return Integer.compare(o1[1], o2[1]);
        	}else {
        		return Integer.compare(o1[0], o2[0]);
        	}
        	
        });
    }
    
}
