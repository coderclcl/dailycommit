import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

// https://www.acmicpc.net/problem/3085
public class Main {
	
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	
	static int N;
	static char[][] board;
	
	public static void main(String[] args) throws IOException {
		
		String line;
		int answer = 0;
		char tmp;
		
		N = Integer.parseInt(br.readLine());
		
		board = new char[N][N];
		
		for(int i=0; i<N; i++) {
			line = br.readLine();
			for(int j=0; j<N; j++) {
				board[i][j] = line.charAt(j);
			}
		}
		
		for(int i=0; i<board.length; i++) {
			
			for(int j=1; j<board.length; j++) {
				tmp =  board[i][j-1];
				board[i][j-1] = board[i][j];
				board[i][j] = tmp;
				answer = Math.max(getMax(board), answer);
				tmp =  board[i][j-1];
				board[i][j-1] = board[i][j];
				board[i][j] = tmp;
			}
			
		}
		
		for(int i=0; i<board.length; i++) {
			for(int j=1; j<board.length; j++) {
				tmp =  board[j-1][i];
				board[j-1][i] = board[j][i];
				board[j][i] = tmp;
				answer = Math.max(getMax(board), answer);
				tmp =  board[j-1][i];
				board[j-1][i] = board[j][i];
				board[j][i] = tmp;
			}

		}
		
		
		bw.append(answer+"");
		
		bw.flush();
		bw.close();
		br.close();
		
	}
	
	public static int getMax(char[][] arr) {
		
		int result = 1;
		int cnt = 1;
		
		// 행검사 
		for(int i=0; i<arr.length; i++) {
			
			for(int j=1; j<arr[i].length; j++) {
				if(arr[i][j-1] == arr[i][j]) {
					cnt++;
					result = Math.max(result, cnt);
				}else {
					cnt = 1;
				}
			}
			cnt = 1;
		}
		
		// 열검사 
		for(int i=0; i<arr.length; i++) {
			for(int j=1; j<arr.length; j++) {
				if(arr[j-1][i] == arr[j][i]) {
					cnt++;
					result = Math.max(result, cnt);
				}else {
					cnt = 1;
				}
			}
			cnt = 1;
		}
		
		return result;
	}
	
	

}
